basePath: /api/e-clinic/v1
definitions:
  basemodel.MedicalRecordRequestInsertBaseModel:
    properties:
      complain:
        type: string
      handling:
        type: string
      pesertaId:
        type: integer
      poliId:
        type: integer
      tension:
        type: string
      weight:
        type: integer
    type: object
  basemodel.PesertaBPJSRequestInsertBaseModel:
    properties:
      address:
        type: string
      birthDate:
        type: string
      faskesLevel:
        type: string
      faskesName:
        type: string
      name:
        type: string
      noBPJS:
        type: string
    type: object
  basemodel.PesertaBPJSRequestUpdateBaseModel:
    properties:
      address:
        type: string
      birthDate:
        type: string
      faskesLevel:
        type: string
      faskesName:
        type: string
      name:
        type: string
      noBPJS:
        type: string
    type: object
  basemodel.RequestInsertBaseModel:
    properties:
      antreanCode:
        type: string
      codeName:
        type: string
      name:
        type: string
      status:
        type: boolean
    type: object
  basemodel.RequestUpdateBaseModel:
    properties:
      antreanCode:
        type: string
      codeName:
        type: string
      name:
        type: string
      status:
        type: boolean
    type: object
  basemodel.ResponseError:
    properties:
      message:
        type: string
    type: object
  basemodel.ResponseRequestPagination:
    properties:
      data: {}
      message:
        type: string
      page:
        type: integer
      rows:
        type: integer
      size:
        type: integer
    type: object
  basemodel.TypePasienRequestInsertBaseModel:
    properties:
      codeName:
        type: string
      name:
        type: string
      status:
        type: boolean
    type: object
  basemodel.TypePasienRequestUpdateBaseModel:
    properties:
      codeName:
        type: string
      name:
        type: string
      status:
        type: boolean
    type: object
info:
  contact: {}
  description: Documentation API E-Clinic
  title: E-Clinic
  version: "1.0"
paths:
  /medical-record:
    get:
      consumes:
      - application/json
      description: Data Medical Record
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/basemodel.ResponseRequestPagination'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Medical Record
      tags:
      - Management Medical Record
    post:
      consumes:
      - application/json
      description: Data Tambah Medical Record
      parameters:
      - description: Create Medical Record body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/basemodel.MedicalRecordRequestInsertBaseModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Tambah Medical Record
      tags:
      - Management Medical Record
  /medical-record/{id}:
    delete:
      consumes:
      - application/json
      description: Data Delete Medical Record
      parameters:
      - description: Medical Record ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Delete Medical Record
      tags:
      - Management Medical Record
    put:
      consumes:
      - application/json
      description: Data Edit Medical Record
      parameters:
      - description: Medical Record ID
        in: path
        name: id
        required: true
        type: integer
      - description: Edit Medical Record body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/basemodel.PesertaBPJSRequestUpdateBaseModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Edit Medical Record
      tags:
      - Management Medical Record
  /peserta-bpjs:
    get:
      consumes:
      - application/json
      description: Data Peserta BPJS WITH Medical Record
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/basemodel.ResponseRequestPagination'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Peserta BPJS WITH Medical Record
      tags:
      - Management Peserta BPJS
    post:
      consumes:
      - application/json
      description: Data Tambah Peserta BPJS
      parameters:
      - description: Create Peserta BPJS body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/basemodel.PesertaBPJSRequestInsertBaseModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Tambah Peserta BPJS
      tags:
      - Management Peserta BPJS
  /peserta-bpjs/{id}:
    delete:
      consumes:
      - application/json
      description: Data Delete Peserta BPJS
      parameters:
      - description: Peserta BPJS ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Delete Peserta BPJS
      tags:
      - Management Peserta BPJS
    put:
      consumes:
      - application/json
      description: Data Edit Peserta BPJS
      parameters:
      - description: Peserta BPJS ID
        in: path
        name: id
        required: true
        type: integer
      - description: Edit Peserta BPJS body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/basemodel.PesertaBPJSRequestUpdateBaseModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Edit Peserta BPJS
      tags:
      - Management Peserta BPJS
  /peserta-bpjs/many2many:
    get:
      consumes:
      - application/json
      description: Data Peserta BPJS Many TO Many
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/basemodel.ResponseRequestPagination'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Peserta BPJS Many TO Many
      tags:
      - Management Peserta BPJS
  /poli:
    get:
      consumes:
      - application/json
      description: Data Master Poli
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/basemodel.ResponseRequestPagination'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Master Poli
      tags:
      - Management Poli
    post:
      consumes:
      - application/json
      description: Data Tambah Poli
      parameters:
      - description: Create user body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/basemodel.RequestInsertBaseModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Tambah Poli
      tags:
      - Management Poli
  /poli/{id}:
    delete:
      consumes:
      - application/json
      description: Data Delete Poli
      parameters:
      - description: Poli ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Delete Poli
      tags:
      - Management Poli
    put:
      consumes:
      - application/json
      description: Data Edit Poli
      parameters:
      - description: Poli ID
        in: path
        name: id
        required: true
        type: integer
      - description: Create user body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/basemodel.RequestUpdateBaseModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Edit Poli
      tags:
      - Management Poli
  /type-pasien:
    get:
      consumes:
      - application/json
      description: Data Master Type Pasien
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/basemodel.ResponseRequestPagination'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Master Type Pasien
      tags:
      - Management Type Pasien
    post:
      consumes:
      - application/json
      description: Data Tambah Type Pasien
      parameters:
      - description: Create user body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/basemodel.TypePasienRequestInsertBaseModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Tambah Type Pasien
      tags:
      - Management Type Pasien
  /type-pasien/{id}:
    delete:
      consumes:
      - application/json
      description: Data Delete Type Pasien
      parameters:
      - description: Type Pasien ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Delete Type Pasien
      tags:
      - Management Type Pasien
    put:
      consumes:
      - application/json
      description: Data Edit Type Pasien
      parameters:
      - description: Type Pasien ID
        in: path
        name: id
        required: true
        type: integer
      - description: Create user body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/basemodel.TypePasienRequestUpdateBaseModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/basemodel.ResponseError'
      security:
      - api_key: []
      summary: Data Edit Type Pasien
      tags:
      - Management Type Pasien
securityDefinitions:
  api_key:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
